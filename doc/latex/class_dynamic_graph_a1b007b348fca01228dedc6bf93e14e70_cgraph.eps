%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Graphviz version 2.20.2 (Tue Mar  2 21:46:26 UTC 2010)
%%For: (michai) Panagiotis Michail,,,
%%Title: G
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval
EncodingVector 45 /hyphen put

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset graphviz 0 0
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
       dup 1 exch div /InvScaleFactor exch def
       scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw text fitted to its expected width
/alignedtext {			% width text
	/text exch def
	/width exch def
	gsave
		width 0 gt {
			[] 0 setdash
			text stringwidth pop width exch sub text length div 0 text ashow
		} if
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def
/showpage { } def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
setupLatin1
%%Page: 1 1
%%PageBoundingBox: 36 36 560 106
%%PageOrientation: Portrait
0 0 1 beginpage
gsave
36 36 524 70 boxprim clip newpath
1 1 set_scale 0 rotate 40 40 translate
% Node1
gsave
0.000 0.000 0.749 nodecolor
newpath 0 20 moveto
0 42 lineto
166 42 lineto
166 20 lineto
closepath fill
1 setlinewidth
filled
0.000 0.000 0.000 nodecolor
newpath 0 20 moveto
0 42 lineto
166 42 lineto
166 20 lineto
closepath stroke
0.000 0.000 0.000 nodecolor
10 /FreeSans set_font
8 29 moveto 150 (DynamicGraph::getEdgeDescriptor) alignedtext
grestore
% Node2
gsave
[ /Rect [ 363 40 515 62 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($class_dynamic_graph.html#aa473c6480ec8ac2fa14680c8953b10e0) >>
  /Subtype /Link
/ANN pdfmark
0.000 0.000 1.000 nodecolor
newpath 363 40 moveto
363 62 lineto
516 62 lineto
516 40 lineto
closepath fill
1 setlinewidth
filled
0.000 0.000 0.000 nodecolor
newpath 363 40 moveto
363 62 lineto
516 62 lineto
516 40 lineto
closepath stroke
0.000 0.000 0.000 nodecolor
10 /FreeSans set_font
370.5 49 moveto 137 (DynamicGraph::getNodeIterator) alignedtext
grestore
% Node1->Node2
gsave
1 setlinewidth
solid
0.667 0.776 0.439 edgecolor
newpath 166 36 moveto
222 39 296 43 353 46 curveto
stroke
0.667 0.776 0.439 edgecolor
newpath 352.7 49.49 moveto
363 47 lineto
353.4 42.52 lineto
closepath fill
1 setlinewidth
solid
0.667 0.776 0.439 edgecolor
newpath 352.7 49.49 moveto
363 47 lineto
353.4 42.52 lineto
closepath stroke
grestore
% Node3
gsave
[ /Rect [ 202 1 326 23 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($class_dynamic_graph.html#a90e4a5161f28877b5723924bd9a290fe) >>
  /Subtype /Link
/ANN pdfmark
0.000 0.000 1.000 nodecolor
newpath 202 1 moveto
202 23 lineto
326 23 lineto
326 1 lineto
closepath fill
1 setlinewidth
filled
0.000 0.000 0.000 nodecolor
newpath 202 1 moveto
202 23 lineto
326 23 lineto
326 1 lineto
closepath stroke
0.000 0.000 0.000 nodecolor
10 /FreeSans set_font
210 10 moveto 108 (DynamicGraph::hasEdge) alignedtext
grestore
% Node1->Node3
gsave
1 setlinewidth
solid
0.667 0.776 0.439 edgecolor
newpath 166 22 moveto
175 21 183 20 192 19 curveto
stroke
0.667 0.776 0.439 edgecolor
newpath 192.4 22.48 moveto
202 18 lineto
191.7 15.51 lineto
closepath fill
1 setlinewidth
solid
0.667 0.776 0.439 edgecolor
newpath 192.4 22.48 moveto
202 18 lineto
191.7 15.51 lineto
closepath stroke
grestore
% Node3->Node2
gsave
1 setlinewidth
solid
0.667 0.776 0.439 edgecolor
newpath 314 23 moveto
334 27 357 33 379 38 curveto
stroke
0.667 0.776 0.439 edgecolor
newpath 378.51 41.47 moveto
389 40 lineto
379.88 34.61 lineto
closepath fill
1 setlinewidth
solid
0.667 0.776 0.439 edgecolor
newpath 378.51 41.47 moveto
389 40 lineto
379.88 34.61 lineto
closepath stroke
grestore
% Node4
gsave
[ /Rect [ 377 0 501 22 ]
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI ($class_dynamic_graph.html#ab5c40bda53d5e3cd1e03078a64982384) >>
  /Subtype /Link
/ANN pdfmark
0.000 0.000 1.000 nodecolor
newpath 377 0 moveto
377 22 lineto
501 22 lineto
501 0 lineto
closepath fill
1 setlinewidth
filled
0.000 0.000 0.000 nodecolor
newpath 377 0 moveto
377 22 lineto
501 22 lineto
501 0 lineto
closepath stroke
0.000 0.000 0.000 nodecolor
10 /FreeSans set_font
385 9 moveto 108 (DynamicGraph::hasNode) alignedtext
grestore
% Node3->Node4
gsave
1 setlinewidth
solid
0.667 0.776 0.439 edgecolor
newpath 326 12 moveto
339 12 353 11 367 11 curveto
stroke
0.667 0.776 0.439 edgecolor
newpath 367 14.5 moveto
377 11 lineto
367 7.5 lineto
closepath fill
1 setlinewidth
solid
0.667 0.776 0.439 edgecolor
newpath 367 14.5 moveto
377 11 lineto
367 7.5 lineto
closepath stroke
grestore
endpage
showpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
%%BoundingBox: 36 36 560 106
end
restore
%%EOF
